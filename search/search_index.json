{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Tracer Backend","title":"Home"},{"location":"#tracer-backend","text":"","title":"Tracer Backend"},{"location":"about/","text":"","title":"About"},{"location":"backendar/","text":"","title":"Backend Architecture"},{"location":"caching/","text":"","title":"Caching"},{"location":"endpoints/","text":"Endpoints Used by Frontend Login POST /login Headers Content-Type: application/json Payload { \"email\" : \"<email>\", \"password\" : \"<password>\" } Response If Login Success: { \"STATUS\" : \"OK\", \"TOKEN\" : \"<accesstoken>\" } If Login Fail: { \"STATUS\" : \"FAIL\" } Register POST /register Headers Content-Type: application/json Payload { \"email\" : \"<email>\", \"password\" : \"<password>\" } Response If Email Verification Fail: { \"STATUS\" : \"FAIL\" } If Password Validation Fail: { \"STATUS\" : \"FAIL\" } If Email Unique Validation Fail: { \"STATUS\" : \"FAIL\" } If All Above Validation Success: { \"STATUS\" : \"OK\", \"TOKEN\" : \"<accesstoken>\" } Topup Headers Content-Type: application/json Token : <accesstoken> Payload { \"user_id\" : \"<user_id>\" } Response If Topup Success: { \"STATUS\" : \"OK\" } If Topup Fail (Less than 20 minutes delay between 2 topups): { \"STATUS\" : \"FAIL\" } URL POST /url Headers Content-Type: application/json Token : <accesstoken> Payload { \"redirect_url\" : \"<redirect_url>\" } Response If Url Validation Success: { \"STATUS\" : \"OK\" } If Url Validation Fail: { \"STATUS\" : \"FAIL\", \"URL_ID\" : \"<url_id>\" } Get /url Headers Content-Type: application/json Token : <accesstoken> Payload { \"user_id\" : \"<user_id>\" } Response If Urls Under User Fetched Success: { \"STATUS\" : \"OK\", \"DATA\" : \"<data>\" } If Urls Under User Fetched Fail: { \"STATUS\" : \"FAIL\" }","title":"Endpoints"},{"location":"endpoints/#endpoints-used-by-frontend","text":"","title":"Endpoints Used by Frontend"},{"location":"endpoints/#login","text":"POST /login","title":"Login"},{"location":"endpoints/#headers","text":"Content-Type: application/json","title":"Headers"},{"location":"endpoints/#payload","text":"{ \"email\" : \"<email>\", \"password\" : \"<password>\" }","title":"Payload"},{"location":"endpoints/#response","text":"If Login Success: { \"STATUS\" : \"OK\", \"TOKEN\" : \"<accesstoken>\" } If Login Fail: { \"STATUS\" : \"FAIL\" }","title":"Response"},{"location":"endpoints/#register","text":"POST /register","title":"Register"},{"location":"endpoints/#headers_1","text":"Content-Type: application/json","title":"Headers"},{"location":"endpoints/#payload_1","text":"{ \"email\" : \"<email>\", \"password\" : \"<password>\" }","title":"Payload"},{"location":"endpoints/#response_1","text":"If Email Verification Fail: { \"STATUS\" : \"FAIL\" } If Password Validation Fail: { \"STATUS\" : \"FAIL\" } If Email Unique Validation Fail: { \"STATUS\" : \"FAIL\" } If All Above Validation Success: { \"STATUS\" : \"OK\", \"TOKEN\" : \"<accesstoken>\" }","title":"Response"},{"location":"endpoints/#topup","text":"","title":"Topup"},{"location":"endpoints/#headers_2","text":"Content-Type: application/json Token : <accesstoken>","title":"Headers"},{"location":"endpoints/#payload_2","text":"{ \"user_id\" : \"<user_id>\" }","title":"Payload"},{"location":"endpoints/#response_2","text":"If Topup Success: { \"STATUS\" : \"OK\" } If Topup Fail (Less than 20 minutes delay between 2 topups): { \"STATUS\" : \"FAIL\" }","title":"Response"},{"location":"endpoints/#url","text":"POST /url","title":"URL"},{"location":"endpoints/#headers_3","text":"Content-Type: application/json Token : <accesstoken>","title":"Headers"},{"location":"endpoints/#payload_3","text":"{ \"redirect_url\" : \"<redirect_url>\" }","title":"Payload"},{"location":"endpoints/#response_3","text":"If Url Validation Success: { \"STATUS\" : \"OK\" } If Url Validation Fail: { \"STATUS\" : \"FAIL\", \"URL_ID\" : \"<url_id>\" } Get /url","title":"Response"},{"location":"endpoints/#headers_4","text":"Content-Type: application/json Token : <accesstoken>","title":"Headers"},{"location":"endpoints/#payload_4","text":"{ \"user_id\" : \"<user_id>\" }","title":"Payload"},{"location":"endpoints/#response_4","text":"If Urls Under User Fetched Success: { \"STATUS\" : \"OK\", \"DATA\" : \"<data>\" } If Urls Under User Fetched Fail: { \"STATUS\" : \"FAIL\" }","title":"Response"},{"location":"logger/","text":"Logger Basic Usage from Logger.logger import TracerLogger logger = TracerLogger('logger1') logger.create_file_handler(logger_format=\"%(message)s\",logger_file='info.log',handler_level='info') logger.log_info_message('Logging message') There are 4 types of logging levels: 'info', 'debug', 'warn', 'error' There are two types of handlers which have been implemented: a) FileHandler: Logs outputs to a log file. b) StreamHandler: Logs output to console. Logger returns \"Level not implemented\" Exception if no handler is added.","title":"Logger"},{"location":"logger/#logger","text":"","title":"Logger"},{"location":"logger/#basic-usage","text":"from Logger.logger import TracerLogger logger = TracerLogger('logger1') logger.create_file_handler(logger_format=\"%(message)s\",logger_file='info.log',handler_level='info') logger.log_info_message('Logging message') There are 4 types of logging levels: 'info', 'debug', 'warn', 'error' There are two types of handlers which have been implemented: a) FileHandler: Logs outputs to a log file. b) StreamHandler: Logs output to console. Logger returns \"Level not implemented\" Exception if no handler is added.","title":"Basic Usage"},{"location":"scheduler/","text":"","title":"Scheduler"}]}